// Generated by Haxe 4.2.1+bf9ff69
import { Constants } from "../../System/Common/Constants.js";
import { CollisionSquare } from "../../System/Core/CollisionSquare.js";
import { MapElement } from "../../System/Core/MapElement.js";
import { Portion } from "../../System/Core/Portion.js";
import { Position } from "../../System/Core/Position.js";
import { Vector3 } from "../../System/Core/Vector3.js";
import { DynamicValue } from "../../System/System/DynamicValue.js";
;(function ($global) { "use strict";
function Main_main() {
	let speedNormal = Constants.SMALL_FONT_SIZE;
	let this1 = DynamicValue.createNone();
	let d = DynamicValue.createNumber(3);
	let this2 = d == null ? DynamicValue.createNone() : d;
	let result = this1.getValue();
	let resultTwo = this2.getValue();
	let d1 = DynamicValue.createNumber(10);
	let resultThree = (d1 == null ? DynamicValue.createNone() : d1).getValue();
	haxe_Log.trace(result,{ fileName : "src/Main.hx", lineNumber : 13, className : "_Main.Main_Fields_", methodName : "main", customParams : [resultTwo,resultThree,"Main result"]});
	haxe_Log.trace(speedNormal,{ fileName : "src/Main.hx", lineNumber : 14, className : "_Main.Main_Fields_", methodName : "main", customParams : ["Speed normal from Constants"]});
	haxe_Log.trace("Paper Maker plugin from Haxe programming language",{ fileName : "src/Main.hx", lineNumber : 15, className : "_Main.Main_Fields_", methodName : "main"});
}
Math.__name__ = true;
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
}
Std.__name__ = true;
class haxe_Log {
	static formatOutput(v,infos) {
		let str = Std.string(v);
		if(infos == null) {
			return str;
		}
		let pstr = infos.fileName + ":" + infos.lineNumber;
		if(infos.customParams != null) {
			let _g = 0;
			let _g1 = infos.customParams;
			while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
		}
		return pstr + ": " + str;
	}
	static trace(v,infos) {
		let str = haxe_Log.formatOutput(v,infos);
		if(typeof(console) != "undefined" && console.log != null) {
			console.log(str);
		}
	}
}
haxe_Log.__name__ = true;
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
haxe_iterators_ArrayIterator.__name__ = true;
class js_Boot {
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		let t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(((o) instanceof Array)) {
				let str = "[";
				s += "\t";
				let _g = 0;
				let _g1 = o.length;
				while(_g < _g1) {
					let i = _g++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			let tostr;
			try {
				tostr = o.toString;
			} catch( _g ) {
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				let s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			let str = "{\n";
			s += "\t";
			let hasp = o.hasOwnProperty != null;
			let k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str.length != 2) {
				str += ", \n";
			}
			str += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str += "\n" + s + "}";
			return str;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
}
js_Boot.__name__ = true;
{
	String.__name__ = true;
	Array.__name__ = true;
}
js_Boot.__toStr = ({ }).toString;
Main_main();
})({});
